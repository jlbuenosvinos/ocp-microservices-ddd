

Edit the limits using the command: oc edit template project-request -n openshift-config


# Please edit the object below. Lines beginning with a '#' will be ignored,
# and an empty file will abort the edit. If an error occurs while saving this file will be
# reopened with the relevant failures.
#
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  creationTimestamp: "2019-10-01T11:07:38Z"
  name: project-request
  namespace: openshift-config
  resourceVersion: "578106"
  selfLink: /apis/template.openshift.io/v1/namespaces/openshift-config/templates/project-request
  uid: adc7302b-e43b-11e9-9d77-0a580a820023
objects:
- apiVersion: v1
  kind: LimitRange
  metadata:
    name: ${PROJECT_NAME}-core-resource-limits
    namespace: ${PROJECT_NAME}
  spec:
    limits:
    - max:
        cpu: 4
        memory: 4Gi
      type: Container
    - max:
        cpu: 4
        memory: 4Gi
      type: Pod
- apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: allow-from-all-namespaces
  spec:
    ingress:
    - from:
      - namespaceSelector: {}
    podSelector: {}



RHDSP:
______

OCP 3

Master / Web Console
https://master.YOURCITY-GUID.open.redhat.com

Registry Console 
https://registry-console-default.apps.YOURCITY-GUID.open.redhat.com

Bastion Server 
bastion.YOURCITY.open.redhat.com


SSH Access to Master and Nodes
You have full admin and SSH access to this cluster and can modify the cluster as your workshop requires it.


You can download the SSH key for the workshops from the below link. In order to access this link you will need to login the URL with your OPENTLC credentials:


https://www.opentlc.com/keys/ocpkey.pem

# From your local host, SSH as ec2-user into the bastion server


ssh -i /path/ocpkey.pem \

       ec2-user@bastion.YOURCITY-NNNN.open.redhat.com


# Become root on the bastion server

sudo -i

# List OpenShift nodes

oc get nodes

# SSH into master server from the bastion server

ssh master1.YOURCITY-NNNN.internal


# Become root on master

# Note: you still have to do this as it logs you in as ec2-user even if you

# SSH in as root

sudo -i




Lab creation:
_____________

oc new-project tst --display-name='tst' --description='tst'

oc new-project devops-tools --display-name='devops-tools' --description='devops-tools'

oc new-project automation-tools --display-name='automation-tools' --description='automation-tools'



oc project openshift

oc import-image jenkins-2-rhel7 --from=registry.access.redhat.com/openshift3/jenkins-2-rhel7:v3.10.127 --confirm

oc import-image jenkins-agent-maven-35-rhel7 --from=registry.access.redhat.com/openshift3/jenkins-agent-maven-35-rhel7:v3.10.127 --confirm

oc import-image fuse7/fuse-java-openshift --from=registry.redhat.io/fuse7/fuse-java-openshift --confirm

oc create -f https://raw.githubusercontent.com/jboss-container-images/jboss-datagrid-7-openshift-image/7.3-v1.2https://raw.githubusercontent.com/jboss-container-images/jboss-datagrid-7-openshift-image/7.3-v1.2/templates/datagrid73-basic.json

oc create -f datagrid72-basic.json

oc project devops-tools

# for OCP 4
oc new-app --template=jenkins-ephemeral -p JENKINS_IMAGE_STREAM_TAG=jenkins:latest -p MEMORY_LIMIT=1024Mi -p ENABLE_OAUTH=true

# !!!!!!!! Modify the agent image jenkins-agent-maven-35-rhel7:v3.10.127 in the Jenkins configuration
image-registry.openshift-image-registry.svc:5000/openshift/jenkins-agent-maven-35-rhel7


oc project devops-tools

oc adm policy add-cluster-role-to-user cluster-admin -z jenkins

oc adm policy add-cluster-role-to-user cluster-admin -z opentlc-mgr

oc project automation-tools

oc adm policy add-cluster-role-to-user cluster-admin -z opentlc-mgr

oc project automation-tools

oc create -f automation-tools-custom-resource-limits.yaml

oc delete limits automation-tools-core-resource-limits

#Create a new gp3 storage class setting up the inmediate claim policy

kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: gp3
  selfLink: /apis/storage.k8s.io/v1/storageclasses/gp3
  uid: 53f897ee-e508-11e9-9446-023d38b1ea3e
  resourceVersion: '568939'
  creationTimestamp: '2019-10-02T11:32:34Z'
  annotations:
    storageclass.kubernetes.io/is-default-class: 'true'
  ownerReferences:
    - apiVersion: v1
      kind: clusteroperator
      name: storage
      uid: d49bc56d-e438-11e9-9d21-027afd16e5e8
provisioner: kubernetes.io/aws-ebs
parameters:
  encrypted: 'true'
  type: gp2
reclaimPolicy: Delete
volumeBindingMode: Immediate


oc project devops-tools

oc create -f sales-demo-app.yaml

oc new-app --template=sales-demo-app


#Create a postgresql storage using a 10GB of capacity.


./setup_openshift.sh -e openshift_host=https://master.andorra-ca92.open.redhat.com:443 -e openshift_project=automation-tools -e openshift_user=opentlc-mgr -e openshift_password=r3dh4t1! -e admin_password=admin1 -e secret_key=mysecret -e pg_username=postgresuser -e pg_password=postgrespwd -e rabbitmq_password=rabbitpwd -e rabbitmq_erlang_cookie=rabbiterlangpwd

./setup_openshift.sh -r -e openshift_host=https://master.andorra-ca92.open.redhat.com:443 -e openshift_project=automation-tools -e openshift_user=opentlc-mgr -e openshift_password=r3dh4t1! -e admin_password=admin1 -e secret_key=mysecret -e pg_username=postgresuser -e pg_password=postgrespwd -e rabbitmq_password=rabbitpwd -e rabbitmq_erlang_cookie=rabbiterlangpwd -e restore_backup_file=./tower-openshift-backup-latest.tar.gz

./setup_openshift.sh -e openshift_host=https://api.cluster-andorra-59d4.andorra-59d4.example.opentlc.com:6443 -e openshift_project=automation-tools -e openshift_user=opentlc-mgr -e openshift_password=r3dh4t1! -e admin_password=admin1 -e secret_key=mysecret -e pg_username=postgresuser -e pg_password=postgrespwd -e rabbitmq_password=rabbitpwd -e rabbitmq_erlang_cookie=rabbiterlangpwd

./setup_openshift.sh -r -e openshift_host=https://master.lisbon-968c.open.redhat.com:443 -e openshift_project=automation-tools -e openshift_user=opentlc-mgr -e openshift_password=r3dh4t1! -e admin_password=admin1 -e secret_key=mysecret -e pg_username=postgresuser -e pg_password=postgrespwd -e rabbitmq_password=rabbitpwd -e rabbitmq_erlang_cookie=rabbiterlangpwd -e restore_backup_file=./tower-openshift-backup-latest.tar.gz


./setup_openshift.sh -r -e openshift_host=https://master.lisbon-3f01.open.redhat.com -e openshift_project=automation-tools -e openshift_user=opentlc-mgr -e openshift_password=r3dh4t1! -e admin_password=admin1 -e secret_key=mysecret -e pg_username=postgresuser -e pg_password=postgrespwd -e rabbitmq_password=rabbitpwd -e rabbitmq_erlang_cookie=rabbiterlangpwd -e restore_backup_file=./tower-openshift-backup-latest.tar.gz


./setup_openshift.sh -b -e openshift_host=https://master.lisbon-3f01.open.redhat.com -e openshift_project=automation-tools -e openshift_user=opentlc-mgr -e openshift_password=r3dh4t1! -e admin_password=admin1 -e secret_key=mysecret -e pg_username=postgresuser -e pg_password=postgrespwd -e rabbitmq_password=rabbitpwd -e rabbitmq_erlang_cookie=rabbiterlangpwd


Grafana setup
-------------


./setup-grafana.sh -n monitor -a -e -p sales-demo-monitoring

oc adm policy add-cluster-role-to-user cluster-reader grafana

check the sales-demo-monitoring Prometheus service to be added to the Grafana Web Console

oc policy add-role-to-user view system:serviceaccount:grafana:grafana -n openshift-monitoring



End Lab creation
________________


Lab creation:
_____________

oc new-project devops-tools --display-name='devops-tools' --description='devops-tools'

oc new-project automation-tools --display-name='automation-tools' --description='automation-tools'

oc adm policy add-cluster-role-to-user cluster-admin -z jenkins

oc adm policy add-cluster-role-to-user cluster-admin -z opentlc-mgr

oc project openshift

oc import-image jenkins-2-rhel7 --from=registry.access.redhat.com/openshift3/jenkins-2-rhel7:v3.10.127 --confirm

oc import-image jenkins-agent-maven-35-rhel7 --from=registry.access.redhat.com/openshift3/jenkins-agent-maven-35-rhel7:v3.10.127 --confirm

oc import-image fuse7/fuse-java-openshift --from=registry.redhat.io/fuse7/fuse-java-openshift --confirm

oc project devops-tools

oc new-app --template=jenkins-ephemeral -p JENKINS_IMAGE_STREAM_TAG=jenkins-2-rhel7:latest -p MEMORY_LIMIT=1024Mi -p ENABLE_OAUTH=true

oc project automation-tools

oc create -f automation-tools-custom-resource-limits.yaml

oc delete limits automation-tools-core-resource-limits

#Create a postgresql storage using a 10GB of capacity.

./setup_openshift.sh -e openshift_host=https://master.bcn-db21.openshiftworkshop.com -e openshift_project=automation-tools -e openshift_user=opentlc-mgr -e openshift_password=r3dh4t1! -e admin_password=admin1 -e secret_key=mysecret -e pg_username=postgresuser -e pg_password=postgrespwd -e rabbitmq_password=rabbitpwd -e rabbitmq_erlang_cookie=rabbiterlangpwd

./setup_openshift.sh -e openshift_host=https://api.cluster-fad9.sandbox460.opentlc.com:6443 -e openshift_project=automation-tools -e openshift_user=kubeadmin -e openshift_password=6w39X-f48wF-IemGe-w685U -e admin_password=admin1 -e secret_key=mysecret -e pg_username=postgresuser -e pg_password=postgrespwd -e rabbitmq_password=rabbitpwd -e rabbitmq_erlang_cookie=rabbiterlangpwd

oc adm policy add-cluster-role-to-user cluster-admin -z jenkins


Grafana setup
-------------


./setup-grafana.sh -n monitor -a -e -p sales-demo-monitoring

oc adm policy add-cluster-role-to-user cluster-reader grafana

check the sales-demo-monitoring Prometheus service to be added to the Grafana Web Console

oc policy add-role-to-user view system:serviceaccount:grafana:grafana -n openshift-monitoring



End Lab creation
________________

oc delete bc sales-deploy-ticket-processor-pipeline
oc delete bc sales-deploy-stock-processor-pipeline
oc delete bc sales-deploy-stock-query-pipeline
oc delete bc sales-infra-pipeline
oc delete bc sales-init-pipeline
oc delete bc sales-prereqs-pipeline

https://github.com/openshift/library

Jenkins Installation

____________________

Jenkins credentials: https://github.com/openshift/jenkins-client-plugin#setting-up-credentials


oc start-build <buildconfig_name> --env=<key>=<value>


oc policy add-role-to-group system:image-puller system:serviceaccounts:cicd-ocpadmin -n ctti-app-dev

oc policy add-role-to-group system:image-puller system:serviceaccounts:cicd-ocpadmin -n ctti-app-pre

oc policy add-role-to-group system:image-puller system:serviceaccounts:cicd-ocpadmin -n ctti-app-pro

oc policy add-role-to-user edit system:serviceaccount:cicd-ocpadmin:jenkins -n ocp-microservices-ddd

oc policy add-role-to-user edit system:serviceaccount:cicd-ocpadmin:jenkins -n ocp-microservices-ddd

oc policy add-role-to-group system:image-puller system:serviceaccounts:ocp-microservices-ddd -n ocp-microservices-ddd

oc new-project cicd-ocpadmin --display-name='cicd-ocpadmin' --description='cicd-ocpadmin'

oc policy add-role-to-user edit system:serviceaccount:cicd-ocpadmin:jenkins -n ctti-app-dev

oc policy add-role-to-user edit system:serviceaccount:cicd-ocpadmin:jenkins -n ctti-app-pre

oc policy add-role-to-user edit system:serviceaccount:cicd-ocpadmin:jenkins -n ctti-app-pro

oc policy add-role-to-group system:image-puller system:serviceaccounts:ctti-app-pre -n ctti-app-dev

oc policy add-role-to-group system:image-puller system:serviceaccounts:ctti-app-pro -n ctti-app-dev

oc new-app --template=jenkins-ephemeral -p JENKINS_IMAGE_STREAM_TAG=jenkins:2 -p NAMESPACE=openshift -p MEMORY_LIMIT=512Mi -p ENABLE_OAUTH=true

oc new-app --template=jenkins-ephemeral -p JENKINS_IMAGE_STREAM_TAG=jenkins-2-centos7:latest -p NAMESPACE=openshift -p MEMORY_LIMIT=512Mi -p ENABLE_OAUTH=true

oc get is

oc import-image jenkins-2-rhel7 --from=registry.access.redhat.com/openshift3/jenkins-2-rhel7:v3.10.127 --confirm

oc import-image jenkins-agent-maven-35-rhel7 --from=registry.access.redhat.com/openshift3/jenkins-agent-maven-35-rhel7:v3.10.127 --confirm

oc new-app --template=jenkins-ephemeral -p JENKINS_IMAGE_STREAM_TAG=jenkins-2-rhel7:latest -p MEMORY_LIMIT=512Mi -p ENABLE_OAUTH=true

oc adm policy add-cluster-role-to-user cluster-admin -z jenkins

oc adm policy add-cluster-role-to-user cluster-admin -z admin

oc adm policy add-cluster-role-to-user cluster-admin -z jbuenosv-redhat.com

oc import-image fuse7/fuse-java-openshift --from=registry.redhat.io/fuse7/fuse-java-openshift --confirm

oc apply -f v3.11/xpaas-streams/datagrid71-image-stream.json -n openshift


eval $(minishift docker-env)
docker login -p $(oc whoami -t) 172.30.1.1:5000
docker pull registry.redhat.io/jboss-datagrid-7/datagrid71-openshift:1.3



- pipelines template creation

oc create -n cicd-ocpadmin -f ctti.yaml



oc login https://masterdns6fkvd2aq5m6cg.westeurope.cloudapp.azure.com:443 --token=RCf0OMDEJkNyx90RoErAdWqX3gOFz87a18WmXSagEVU

Templates execution

oc start-build sales-prereqs-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=RCf0OMDEJkNyx90RoErAdWqX3gOFz87a18WmXSagEVU --wait
oc start-build sales-init-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=RCf0OMDEJkNyx90RoErAdWqX3gOFz87a18WmXSagEVU --wait
oc start-build sales-infra-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=RCf0OMDEJkNyx90RoErAdWqX3gOFz87a18WmXSagEVU --wait
oc start-build sales-deploy-ticket-processor-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=RW0cqv6L3VmIy1y5ojhlz0Aft_gGLcepevoYCcti_W54 --wait
oc start-build sales-deploy-stock-query-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=W0cqv6L3VmIy1y5ojhlz0Aft_gGLcepevoYCcti_W54 --wait
oc start-build sales-deploy-stock-processor-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=W0cqv6L3VmIy1y5ojhlz0Aft_gGLcepevoYCcti_W54 --wait


oc start-build sales-prereqs-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=vt8_ZHhj1RrMOGJTXevgjvQQCwvOCqRiD6VfKgVYVpM
oc start-build sales-init-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=vt8_ZHhj1RrMOGJTXevgjvQQCwvOCqRiD6VfKgVYVpM
oc start-build sales-infra-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=vt8_ZHhj1RrMOGJTXevgjvQQCwvOCqRiD6VfKgVYVpM
oc start-build sales-deploy-ticket-processor-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=vt8_ZHhj1RrMOGJTXevgjvQQCwvOCqRiD6VfKgVYVpM
oc start-build sales-deploy-stock-query-pipeline -n cicd-ocpadmin --env=STOCKEC_TOKEN=vt8_ZHhj1RrMOGJTXevgjvQQCwvOCqRiD6VfKgVYVpM
oc start-build sales-deploy-stock-processor-pipeline -n cicd-ocpadmin --env=SEC_TOKEN=vt8_ZHhj1RrMOGJTXevgjvQQCwvOCqRiD6VfKgVYVpM



oc start-build sales-deploy-stock-query-pipeline -e STOCK_QUERY_SERVICE_VERSION=v1
oc start-build sales-deploy-stock-query-pipeline -e STOCK_QUERY_SERVICE_VERSION=v1
oc project devops-tools
oc start-build sales-deploy-stock-query-pipeline -e STOCK_QUERY_SERVICE_VERSION=v1
oc start-build sales-deploy-ticket-processor-pipeline -e TICKETING_SERVICE_VERSION=v1
oc start-build sales-deploy-stock-processor-pipeline -e STOCK_PROCESSOR_SERVICE_VERSION=v1
oc project devops-tools
oc project devops-tools
oc start-build sales-deploy-stock-query-pipeline -e STOCK_QUERY_SERVICE_VERSION=v1
oc start-build sales-deploy-ticket-processor-pipeline -e TICKETING_SERVICE_VERSION=v1
oc start-build sales-deploy-stock-processor-pipeline -e STOCK_PROCESSOR_SERVICE_VERSION=v1
oc project devops-tools
oc start-build sales-deploy-ticket-processor-pipeline -e TICKETING_SERVICE_VERSION=v2
oc start-build sales-deploy-ticket-processor-pipeline -e TICKETING_SERVICE_VERSION=v2

  

oc login https://192.168.99.100:8443 --token=vt8_ZHhj1RrMOGJTXevgjvQQCwvOCqRiD6VfKgVYVpM


Login

curl -X GET -H "Authorization: Bearer bOVJsmTpvW2UCQsfu7Wx0p-DoIsT5hHavBC8gQtJR7k" https://192.168.99.100:8443/oapi/v1 --insecure

Execute a build config:

curl -X POST -H "Content-Type: application/json" -k https://192.168.99.100:8443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-prereqs-pipeline/webhooks/secretvalue1/generic

curl -X POST -H "Content-Type: application/json" -k https://192.168.99.100:8443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-init-pipeline/webhooks/secretvalue1/generic

curl -X POST -H "Content-Type: application/json" -k https://192.168.99.100:8443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-infra-pipeline/webhooks/secretvalue1/generic

curl -X POST -H "Content-Type: application/json" -k https://192.168.99.100:8443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-deploy-ticket-processor-pipeline/webhooks/secretvalue1/generic

curl -X POST -H "Content-Type: application/json" -k https://192.168.99.100:8443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-deploy-stock-query-pipeline/webhooks/secretvalue1/generic

curl -X POST -H "Content-Type: application/json" -k https://192.168.99.100:8443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-deploy-stock-processor-pipeline/webhooks/secretvalue1/generic


CTTI:

curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer 792YNsLAJv1P0TwWF50fhIEtelVnOyWmpEgEZOxJyPY" -k https://masterdns6fkvd2aq5m6cg.westeurope.cloudapp.azure.com:443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-prereqs-pipeline/webhooks/secretvalue2/generic

curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer 792YNsLAJv1P0TwWF50fhIEtelVnOyWmpEgEZOxJyPY" -k https://masterdns6fkvd2aq5m6cg.westeurope.cloudapp.azure.com:443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-init-pipeline/webhooks/secretvalue2/generic

curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer 792YNsLAJv1P0TwWF50fhIEtelVnOyWmpEgEZOxJyPY" -k https://masterdns6fkvd2aq5m6cg.westeurope.cloudapp.azure.com:443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-infra-pipeline/webhooks/secretvalue2/generic

curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer 792YNsLAJv1P0TwWF50fhIEtelVnOyWmpEgEZOxJyPY" -k https://masterdns6fkvd2aq5m6cg.westeurope.cloudapp.azure.com:443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-deploy-ticket-processor-pipeline/webhooks/secretvalue2/generic

curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer 792YNsLAJv1P0TwWF50fhIEtelVnOyWmpEgEZOxJyPY" -k https://masterdns6fkvd2aq5m6cg.westeurope.cloudapp.azure.com:443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-deploy-stock-query-pipeline/webhooks/secretvalue2/generic

curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer 792YNsLAJv1P0TwWF50fhIEtelVnOyWmpEgEZOxJyPY" -k https://masterdns6fkvd2aq5m6cg.westeurope.cloudapp.azure.com:443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-deploy-stock-processor-pipeline/webhooks/secretvalue2/generic


-d "{\"query\":\"$name\", \"turnOff\":true}"

curl -X POST -H "Content-Type: application/json" -d "{\"SEC_TOKEN\":\"zgqrq5D8-C3a4SoRJSZ-KBO2uh-BQRpTwLTDTanqKAU\"}" -k https://192.168.99.100:8443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-prereqs-pipeline/webhooks/secretvalue1/generic

curl -X POST -H "Content-Type: application/json" -d "{\"sec_token_param\":\"zgqrq5D8-C3a4SoRJSZ-KBO2uh-BQRpTwLTDTanqKAU\"}" -k https://192.168.99.100:8443/apis/build.openshift.io/v1/namespaces/cicd-ocpadmin/buildconfigs/sales-prereqs-pipeline/webhooks/secretvalue1/generic


FhIT3FwP1t9eAB0GIiBUtY9D6iMEbxT0uBdS9Y9DN2g


FhIT3FwP1t9eAB0GIiBUtY9D6iMEbxT0uBdS9Y9DN2g


Token para la API de CTTI
eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJ0b3dlciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJqbGJ1ZW5vc3Zpbm9zLXRva2VuLXAyanoyIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6ImpsYnVlbm9zdmlub3MiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC51aWQiOiIzZWQ2MzQyZi01MGE2LTExZTktYjg5MC0wMDBkM2E0NDcyZWYiLCJzdWIiOiJzeXN0ZW06c2VydmljZWFjY291bnQ6dG93ZXI6amxidWVub3N2aW5vcyJ9.ppAUlZUS4K3l9kfROYfCbekOK5YTrPVCdJxhjtZOm3jxpAUc21q-VRU0KQCzyp5OK0StYhHWmtPU7a1b4uU4nHvMn6CrS0C1D5xDd85I88-AUlJGEOT-IIyjfqjSX7IV2Ee5JhvH7KNs052OAvBt6JIyZA2TvyW2u3iq5pawICElglUMKzbFjR1-xdxxmcTlbm9XqsBQPGKrJU2Ct3xDzNYv3Kl0GYG4un0ydCnheqFMGh2cHQxBB7MKdFwrOSHtN6Y-W5rxIbP39Ds62_QDa7uVC6oHfiu827De4IcHZbAwHTcmzpYrCMN7ZOkC5VyPuDQrNh0xY4ebbXI5ZXaFWA


oc login https://192.168.99.106:8443 --token=LQJorhpo0RKjfVOBy83hJM_KrXVlAO2IJwsOlTArlkQ



docker login -u admin -p LQJorhpo0RKjfVOBy83hJM_KrXVlAO2IJwsOlTArlkQ docker-registry-default.192.168.99.106.nip.io

docker login -u jbuenosv -p RCf0OMDEJkNyx90RoErAdWqX3gOFz87a18WmXSagEVU https://docker-registry-default.51.144.36.254.nip.io



-- JENKINS PERMISSIONS TO CREATE PROJECTS

cat << EOF > clusterpolicy.json
{
  "apiVersion": "v1",
  "kind": "ClusterRole",
  "metadata": {
    "name": "create_project_role"
  },
  "rules": [
  {
      "verbs": ["create"],
      "resources": ["projectrequests"]
  },
  {
      "verbs": ["get","list","watch"],
      "resources": ["*"]
  }
  ]
}
EOF

oc create -f clusterpolicy.json


oc adm policy add-cluster-role-to-user cluster-admin -z jenkins


-- END JENKINS PERMISSIONS TO CREATE PROJECTS



AQM 7 Installation
__________________

oc login -u admin:admin

oc create -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/amq-broker-7-image-streams.yaml

oc replace -n openshift --force -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/amq-broker-7-image-streams.yaml

oc -n openshift import-image amq-broker-71-openshift:1.0

oc create -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/templates/amq-broker-71-basic.yaml

oc create -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/templates/amq-broker-71-ssl.yaml

oc create -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/templates/amq-broker-71-persistence.yaml

oc create -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/templates/amq-broker-71-persistence-ssl.yaml

oc create -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/templates/amq-broker-71-statefulset-clustered.yaml

oc replace -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/templates/amq-broker-71-basic.yaml

oc replace -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/templates/amq-broker-71-ssl.yaml

oc replace -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/templates/amq-broker-71-persistence.yaml

oc replace -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/templates/amq-broker-71-persistence-ssl.yaml

oc replace -n openshift -f https://raw.githubusercontent.com/jboss-container-images/jboss-amq-7-broker-openshift-image/71-1.0.TP/templates/amq-broker-71-statefulset-clustered.yaml

oc policy add-role-to-user view -z default


Maven
_____

export MAVEN_HOME=/Applications/Tools/apache-maven-3.5.0
export PATH=$PATH:$MAVEN_HOME/bin/


Project delete
________________

oc delete project ocp-microservices-ddd


Project creation
________________

oc new-project ocp-microservices-ddd


amq 6.3
_______

oc new-app --template=amq63-persistent -p MQ_USERNAME=sales-event-store -p MQ_PASSWORD=sales-event-store -p APPLICATION_NAME=sales-event-store


AMQ 7.1
_______

oc new-app --template=amq-broker-71-statefulset-clustered -p APPLICATION_NAME=sales-event-store -p AMQ_NAME=sales-event-store -p AMQ_CLUSTERED=true -p AMQ_CLUSTER_USER=sales-event-store -p AMQ_CLUSTER_PASSWORD=sales-event-store -p AMQ_REPLICATED=true -p AMQ_REPLICAS=2


data grid
_________
_________

oc new-app --template=datagrid71-basic -p USERNAME=sales-data-store -p PASSWORD=sales-data-store-Mypassword123_ -p APPLICATION_NAME=sales-data-store -p INFINISPAN_CONNECTORS=rest,hotrod,memcached -p CACHE_NAMES=STOCK -p HOTROD_AUTHENTICATION=true -p CONTAINER_SECURITY_ROLE_MAPPER=identity-role-mapper -p CONTAINER_SECURITY_ROLES=sales-data-store=ALL -p ADMIN_GROUP=REST,___schema_manager,sales-data-store -p MEMCACHED_CACHE=""


Patching the sales-data-store deployment adding the STOCK cache configuration
_____________________________________________________________________________

oc env dc/sales-data-store STOCK_CACHE_START=EAGER STOCK_CACHE_SECURITY_AUTHORIZATION_ENABLED=true  STOCK_CACHE_SECURITY_AUTHORIZATION_ROLES=sales-data-store,___schema_manager,___script_manager HOTROD_AUTHENTICATION=true  CONTAINER_SECURITY_ROLE_MAPPER=identity-role-mapper CONTAINER_SECURITY_ROLES=sales-data-store\\=ALL  ADMIN_GROUP=REST,___schema_manager,sales-data-store


AMQ-Streams
-----------

sed -i '' 's/namespace: .*/namespace: ocp-microservices-ddd/' install/cluster-operator/*RoleBinding*.yaml

oc apply -f install/cluster-operator -n ocp-microservices-ddd

oc apply -f examples/templates/cluster-operator -n ocp-microservices-ddd


MS deployment
_____________


ticket-processor-service
------------------------

oc create -f ticket-processor-service-secret.yaml

stock-processor-service
------------------------

oc create -f stock-processor-service-secret.yaml

stock-query-service
-------------------

oc create -f stock-query-service-secret.yaml


Maven deployment command
________________________

mvn clean fabric8:deploy -Popenshift

oc scale dc/stock-processor-service --replicas=2


Istio Installation
__________________

Minishift Istio addon: https://github.com/minishift/minishift-addons/tree/master/add-ons/istio

Istio tutorials: https://github.com/redhat-developer-demos/istio-tutorial

https://github.com/istio/istio/releases/tag/0.7.1

minishift env setup

eval $(minishift oc-env)
eval $(minishift docker-env)

oc adm policy add-scc-to-user anyuid -z istio-ingress-service-account -n istio-system

oc adm policy add-scc-to-user anyuid -z default -n istio-system

oc adm policy add-scc-to-user anyuid -z prometheus -n istio-system

oc create -f install/kubernetes/istio.yaml

oc project istio-system

oc apply -f install/kubernetes/addons/prometheus.yaml

oc apply -f install/kubernetes/addons/grafana.yaml

oc apply -f install/kubernetes/addons/servicegraph.yaml

oc process -f  https://raw.githubusercontent.com/jaegertracing/jaeger-openshift/master/all-in-one/jaeger-all-in-one-template.yml | oc create -f -

oc expose svc servicegraph

oc expose svc grafana

oc expose svc prometheus

oc expose svc istio-ingress


oc new-project tutorial

oc adm policy add-scc-to-user privileged -z default -n tutorial


export ISTIO_HOME=/Users/jlbuenosvinos/OneDrive/RedHat/Doc/OpenShift/GIT/ocp-microservices-ddd/doc/istio-0.7.1
export PATH=$ISTIO_HOME/bin:$PATH


#!/bin/bash
while true
do curl customer-tutorial.$(minishift ip).nip.io
sleep .1
done


istioctl create -f route-rule-recommendation-v1.yml -n tutorial




Istio 1.1.1
___________

export ISTIO_HOME=/Users/jlbuenosvinos/OneDrive/RedHat/Doc/OpenShift/GIT/ocp-microservices-ddd/doc/istio-1.1.1
export PATH=$ISTIO_HOME/bin:$PATH

oc adm policy add-scc-to-user privileged -z default -n ctti-app-dev

oc adm policy add-scc-to-user privileged -z default -n sales-demo-app-dev

oc adm policy add-scc-to-user privileged -z default -n sales-demo-app-pre

oc adm policy add-scc-to-user privileged -z default -n sales-demo-app-pro

https://github.com/redhat-developer-demos/istio-tutorial/blob/master/documentation/modules/ROOT/pages/1setup.adoc


Ansible Tower installation
__________________________

https://store.ansible.com/redhat/tower_license/

Create a postgresql storage using a 10GB of capacity.

Create the new resource limit base on the automation-tools-custom-resource-limits.yaml

Review the inventory to disable the certificate check

./setup_openshift.sh -e openshift_host=https://master.bcn-ffce.openshiftworkshop.com -e openshift_project=automation-tools -e openshift_user=opentlc-mgr -e openshift_password=r3dh4t1! -e admin_password=admin1 -e secret_key=mysecret -e pg_username=postgresuser -e pg_password=postgrespwd -e rabbitmq_password=rabbitpwd -e rabbitmq_erlang_cookie=rabbiterlangpwd

