[0;34mNo config file found; using defaults[0m

PLAY [Deploy Tower] ************************************************************************************************************************************************************************************************************************************************************

TASK [preflight : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
[0;36mincluded: /Users/jlbuenosvinos/OneDrive/RedHat/Doc/OpenShift/GIT/ocp-microservices-ddd/doc/tower/ansible-tower-openshift-setup-3.4.3/roles/preflight/tasks/check_openshift.yml for localhost[0m

TASK [preflight : openshift_project should be defined] *************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {[0m
[0;32m    "changed": false, [0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m

TASK [preflight : openshift_user should be defined] ****************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {[0m
[0;32m    "changed": false, [0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m

TASK [preflight : openshift_password should be defined] ************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {[0m
[0;32m    "changed": false, [0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m

TASK [preflight : Check if the oc command is installed] ************************************************************************************************************************************************************************************************************************
[0;33mchanged: [localhost] => {"changed": true, "cmd": "type oc", "delta": "0:00:00.007102", "end": "2019-05-29 14:46:34.885399", "rc": 0, "start": "2019-05-29 14:46:34.878297", "stderr": "", "stderr_lines": [], "stdout": "oc is /Applications/RedHat/oc", "stdout_lines": ["oc is /Applications/RedHat/oc"]}[0m

TASK [preflight : Ensure OpenShift CLI is installed] ***************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {[0m
[0;32m    "changed": false, [0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m

TASK [preflight : include_tasks] ***********************************************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [preflight : Check if inventory file variables are defined] ***************************************************************************************************************************************************************************************************************
[1;35m [WARNING]: conditional statements should not include jinja2 templating delimiters such as {{ }} or {% %}. Found: {{item}} is undefined or {{item}} == ''[0m
[1;35m[0m
[0;36mskipping: [localhost] => (item=admin_password)  => {"ansible_loop_var": "item", "changed": false, "item": "admin_password", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=secret_key)  => {"ansible_loop_var": "item", "changed": false, "item": "secret_key", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=pg_username)  => {"ansible_loop_var": "item", "changed": false, "item": "pg_username", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=pg_password)  => {"ansible_loop_var": "item", "changed": false, "item": "pg_password", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=rabbitmq_password)  => {"ansible_loop_var": "item", "changed": false, "item": "rabbitmq_password", "skip_reason": "Conditional result was False"}[0m
[0;36mskipping: [localhost] => (item=rabbitmq_erlang_cookie)  => {"ansible_loop_var": "item", "changed": false, "item": "rabbitmq_erlang_cookie", "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : fail] *******************************************************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : include_tasks] **********************************************************************************************************************************************************************************************************************************************
[0;36mincluded: /Users/jlbuenosvinos/OneDrive/RedHat/Doc/OpenShift/GIT/ocp-microservices-ddd/doc/tower/ansible-tower-openshift-setup-3.4.3/roles/kubernetes/tasks/openshift_auth.yml for localhost[0m
[0;36mincluded: /Users/jlbuenosvinos/OneDrive/RedHat/Doc/OpenShift/GIT/ocp-microservices-ddd/doc/tower/ansible-tower-openshift-setup-3.4.3/roles/kubernetes/tasks/openshift.yml for localhost[0m

TASK [kubernetes : include_vars] ***********************************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {"ansible_facts": {"openshift_oc_bin": "oc --config={{ openshift_oc_config_file }}", "openshift_oc_config_file": "{{ kubernetes_base_path }}/.kube/config"}, "ansible_included_var_files": ["/Users/jlbuenosvinos/OneDrive/RedHat/Doc/OpenShift/GIT/ocp-microservices-ddd/doc/tower/ansible-tower-openshift-setup-3.4.3/roles/kubernetes/vars/openshift.yml"], "changed": false}[0m

TASK [kubernetes : Set kubernetes_namespace] ***********************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {"ansible_facts": {"kubernetes_namespace": "automation-tools"}, "changed": false}[0m

TASK [kubernetes : Ensure workspace directories exist] *************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => (item=/tmp/ansible-tower-config) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "wheel", "item": "/tmp/ansible-tower-config", "mode": "0755", "owner": "jlbuenosvinos", "path": "/tmp/ansible-tower-config", "size": 136, "state": "directory", "uid": 501}[0m
[0;32mok: [localhost] => (item=/tmp/ansible-tower-config/.kube) => {"ansible_loop_var": "item", "changed": false, "gid": 0, "group": "wheel", "item": "/tmp/ansible-tower-config/.kube", "mode": "0755", "owner": "jlbuenosvinos", "path": "/tmp/ansible-tower-config/.kube", "size": 102, "state": "directory", "uid": 501}[0m

TASK [kubernetes : Authenticate with OpenShift via user and password] **********************************************************************************************************************************************************************************************************
[0;33mchanged: [localhost] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m

TASK [kubernetes : OpenShift authentication failed on TLS verification] ********************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : OpenShift authentication failed] ****************************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : Authenticate with OpenShift via token] **********************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [kubernetes : OpenShift authentication failed] ****************************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : Get Project Detail] *****************************************************************************************************************************************************************************************************************************************
[0;33mchanged: [localhost] => {"changed": true, "cmd": "oc --config=/tmp/ansible-tower-config/.kube/config get project automation-tools", "delta": "0:00:00.397192", "end": "2019-05-29 14:46:37.766003", "rc": 0, "start": "2019-05-29 14:46:37.368811", "stderr": "", "stderr_lines": [], "stdout": "NAME               DISPLAY NAME   STATUS\nautomation-tools                  Active", "stdout_lines": ["NAME               DISPLAY NAME   STATUS", "automation-tools                  Active"]}[0m

TASK [kubernetes : Create AWX Openshift Project] *******************************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : Check PVC status] *******************************************************************************************************************************************************************************************************************************************
[0;33mchanged: [localhost] => {"changed": true, "cmd": ["oc", "--config=/tmp/ansible-tower-config/.kube/config", "get", "pvc", "postgresql", "-n", "automation-tools", "-o=jsonpath={.status.phase}"], "delta": "0:00:00.381596", "end": "2019-05-29 14:46:38.390916", "rc": 0, "start": "2019-05-29 14:46:38.009320", "stderr": "", "stderr_lines": [], "stdout": "Bound", "stdout_lines": ["Bound"]}[0m

TASK [kubernetes : Ensure PostgreSQL PVC is available] *************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {[0m
[0;32m    "changed": false, [0m
[0;32m    "msg": "All assertions passed"[0m
[0;32m}[0m

TASK [kubernetes : Set postgresql service name] ********************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {"ansible_facts": {"postgresql_service_name": "postgresql"}, "changed": false}[0m

TASK [kubernetes : Add privileged SCC to service account] **********************************************************************************************************************************************************************************************************************
[0;33mchanged: [localhost] => {"changed": true, "cmd": "oc --config=/tmp/ansible-tower-config/.kube/config adm policy add-scc-to-user privileged system:serviceaccount:automation-tools:awx\n", "delta": "0:00:00.418601", "end": "2019-05-29 14:46:39.078536", "rc": 0, "start": "2019-05-29 14:46:38.659935", "stderr": "", "stderr_lines": [], "stdout": "scc \"privileged\" added to: [\"system:serviceaccount:automation-tools:awx\"]", "stdout_lines": ["scc \"privileged\" added to: [\"system:serviceaccount:automation-tools:awx\"]"]}[0m

TASK [kubernetes : include_tasks] **********************************************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => (item=kubernetes_auth.yml)  => {"ansible_loop_var": "tasks", "changed": false, "skip_reason": "Conditional result was False", "tasks": "kubernetes_auth.yml"}[0m
[0;36mskipping: [localhost] => (item=kubernetes.yml)  => {"ansible_loop_var": "tasks", "changed": false, "skip_reason": "Conditional result was False", "tasks": "kubernetes.yml"}[0m

TASK [kubernetes : Use kubectl or oc] ******************************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {"ansible_facts": {"kubectl_or_oc": "oc --config=/tmp/ansible-tower-config/.kube/config"}, "changed": false}[0m

TASK [kubernetes : set_fact] ***************************************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {"ansible_facts": {"deployment_object": "sts"}, "changed": false}[0m

TASK [kubernetes : Record deployment size] *************************************************************************************************************************************************************************************************************************************
[0;31mfatal: [localhost]: FAILED! => {"changed": true, "cmd": "oc --config=/tmp/ansible-tower-config/.kube/config get sts  ansible-tower  -n automation-tools -o=jsonpath='{.status.replicas}'\n", "delta": "0:00:00.421866", "end": "2019-05-29 14:46:39.839350", "msg": "non-zero return code", "rc": 1, "start": "2019-05-29 14:46:39.417484", "stderr": "Error from server (NotFound): statefulsets.apps \"ansible-tower\" not found", "stderr_lines": ["Error from server (NotFound): statefulsets.apps \"ansible-tower\" not found"], "stdout": "", "stdout_lines": []}[0m
[0;36m...ignoring[0m

TASK [kubernetes : Set expected post-deployment Replicas value] ****************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : Delete existing Deployment] *********************************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : Get Postgres Service Detail] ********************************************************************************************************************************************************************************************************************************
[0;31mfatal: [localhost]: FAILED! => {"changed": true, "cmd": "oc --config=/tmp/ansible-tower-config/.kube/config describe svc postgresql -n automation-tools", "delta": "0:00:00.490504", "end": "2019-05-29 14:46:40.597634", "msg": "non-zero return code", "rc": 1, "start": "2019-05-29 14:46:40.107130", "stderr": "Error from server (NotFound): services \"postgresql\" not found", "stderr_lines": ["Error from server (NotFound): services \"postgresql\" not found"], "stdout": "", "stdout_lines": []}[0m
[0;36m...ignoring[0m

TASK [kubernetes : Template PostgreSQL Deployment] *****************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {"changed": false, "checksum": "ff1ea920835e7d27d9f834603ec8485d71e3fa94", "dest": "/tmp/ansible-tower-config/postgresql-persistent.yml", "gid": 20, "group": "staff", "mode": "0600", "owner": "jlbuenosvinos", "path": "/tmp/ansible-tower-config/postgresql-persistent.yml", "size": 6405, "state": "file", "uid": 501}[0m

TASK [kubernetes : Deploy and Activate Postgres] *******************************************************************************************************************************************************************************************************************************
[0;33mchanged: [localhost] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m

TASK [kubernetes : Deploy and Activate Postgres (Kubernetes)] ******************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [kubernetes : Set postgresql hostname to helm package service] ************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : Wait for Postgres to activate] ******************************************************************************************************************************************************************************************************************************
Pausing for 60 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
[0;32mok: [localhost] => {"changed": false, "delta": 60, "echo": true, "rc": 0, "start": "2019-05-29 14:46:42.230778", "stderr": "", "stdout": "Paused for 60.0 seconds", "stop": "2019-05-29 14:47:42.235544", "user_input": ""}[0m

TASK [kubernetes : Set task image name] ****************************************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : Set web image name] *****************************************************************************************************************************************************************************************************************************************
[0;36mskipping: [localhost] => {"changed": false, "skip_reason": "Conditional result was False"}[0m

TASK [kubernetes : Render deployment templates] ********************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => (item=None) => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;32mok: [localhost] => (item=None) => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;32mok: [localhost] => (item=None) => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m
[0;32mok: [localhost] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": false}[0m

TASK [kubernetes : Apply Deployment] *******************************************************************************************************************************************************************************************************************************************
[0;33mchanged: [localhost] => (item=None) => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m
[0;33mchanged: [localhost] => (item=None) => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m
[0;33mchanged: [localhost] => (item=None) => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m
[0;33mchanged: [localhost] => {"censored": "the output has been hidden due to the fact that 'no_log: true' was specified for this result", "changed": true}[0m

TASK [kubernetes : Delete any existing management pod] *************************************************************************************************************************************************************************************************************************
[0;33mchanged: [localhost] => {"changed": true, "cmd": "oc --config=/tmp/ansible-tower-config/.kube/config -n automation-tools  delete pod ansible-tower-management --grace-period=0 --ignore-not-found\n", "delta": "0:00:00.388545", "end": "2019-05-29 14:47:47.122247", "rc": 0, "start": "2019-05-29 14:47:46.733702", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}[0m

TASK [kubernetes : Template management pod] ************************************************************************************************************************************************************************************************************************************
[0;32mok: [localhost] => {"ansible_facts": {"management_pod": "---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: ansible-tower-management\n  namespace: automation-tools\nspec:\n  containers:\n    - name: ansible-tower-management\n      image: \"registry.access.redhat.com/ansible-tower-34/ansible-tower:3.4.3\"\n      command: [\"sleep\", \"infinity\"]\n      volumeMounts:\n        - name: ansible-tower-application-config\n          mountPath: \"/etc/tower\"\n          readOnly: true\n\n        - name: \"ansible-tower-application-credentials\"\n          mountPath: \"/etc/tower/conf.d/\"\n          readOnly: true\n  volumes:\n    - name: ansible-tower-application-config\n      configMap:\n        name: ansible-tower-config\n        items:\n          - key: ansible-tower_settings\n            path: settings.py\n          - key: secret_key\n            path: SECRET_KEY\n\n    - name: \"ansible-tower-application-credentials\"\n      secret:\n        secretName: \"ansible-tower-secrets\"\n        items:\n          - key: credentials_py\n            path: 'credentials.py'\n\n  restartPolicy: Never\n"}, "changed": false}[0m

TASK [kubernetes : Create management pod] **************************************************************************************************************************************************************************************************************************************
[0;33mchanged: [localhost] => {"changed": true, "cmd": "echo '---\napiVersion: v1\nkind: Pod\nmetadata:\n  name: ansible-tower-management\n  namespace: automation-tools\nspec:\n  containers:\n    - name: ansible-tower-management\n      image: \"registry.access.redhat.com/ansible-tower-34/ansible-tower:3.4.3\"\n      command: [\"sleep\", \"infinity\"]\n      volumeMounts:\n        - name: ansible-tower-application-config\n          mountPath: \"/etc/tower\"\n          readOnly: true\n\n        - name: \"ansible-tower-application-credentials\"\n          mountPath: \"/etc/tower/conf.d/\"\n          readOnly: true\n  volumes:\n    - name: ansible-tower-application-config\n      configMap:\n        name: ansible-tower-config\n        items:\n          - key: ansible-tower_settings\n            path: settings.py\n          - key: secret_key\n            path: SECRET_KEY\n\n    - name: \"ansible-tower-application-credentials\"\n      secret:\n        secretName: \"ansible-tower-secrets\"\n        items:\n          - key: credentials_py\n            path: '\"'\"'credentials.py'\"'\"'\n\n  restartPolicy: Never\n' | oc --config=/tmp/ansible-tower-config/.kube/config apply -f -\n", "delta": "0:00:00.773252", "end": "2019-05-29 14:47:48.147823", "rc": 0, "start": "2019-05-29 14:47:47.374571", "stderr": "", "stderr_lines": [], "stdout": "pod \"ansible-tower-management\" created", "stdout_lines": ["pod \"ansible-tower-management\" created"]}[0m

TASK [kubernetes : Wait for management pod to start] ***************************************************************************************************************************************************************************************************************************
[1;30mFAILED - RETRYING: Wait for management pod to start (60 retries left).[0m
[0;33mchanged: [localhost] => {"attempts": 2, "changed": true, "cmd": "oc --config=/tmp/ansible-tower-config/.kube/config -n automation-tools  get pod ansible-tower-management -o jsonpath=\"{.status.phase}\"\n", "delta": "0:00:00.392198", "end": "2019-05-29 14:47:59.333401", "rc": 0, "start": "2019-05-29 14:47:58.941203", "stderr": "", "stderr_lines": [], "stdout": "Running", "stdout_lines": ["Running"]}[0m

TASK [kubernetes : Migrate database] *******************************************************************************************************************************************************************************************************************************************
